# ======================================================
# SOINS SUITE - Configuration Unifiée .env
# ======================================================
# Toutes les variables d'environnement centralisées

# ======================================================
# ENVIRONNEMENT APPLICATION
# ======================================================
APP_ENV=development
# Options: development, docker
# docker = production/staging (pas de différence)

# ======================================================
# SERVEUR HTTP
# ======================================================
SERVER_HOST=0.0.0.0
SERVER_PORT=4000
SERVER_READ_TIMEOUT=30
SERVER_WRITE_TIMEOUT=30

# ======================================================
# BASE DE DONNÉES POSTGRESQL
# ======================================================
DB_HOST=localhost
DB_PORT=5432
DB_NAME=soins_suite
DB_USERNAME=postgres
DB_PASSWORD=idriss
DB_MAX_CONNECTIONS=100
DB_CONNECTION_TTL=300
DB_QUERY_TIMEOUT=30
DB_SSL_MODE=disable

# ======================================================
# REDIS CACHE
# ======================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DATABASE=0
REDIS_MAX_RETRIES=3
REDIS_POOL_SIZE=10
REDIS_POOL_TIMEOUT=30

# ======================================================
# MONGODB (optionnel)
# ======================================================
# En développement, fallback automatique sur mongodb://localhost:27017 si vide
# Pour production/docker, définir l'URI complète : mongodb://user:pass@host:port/db
MONGODB_URI=
MONGODB_DATABASE=soins_suite_dynamic
MONGODB_CONNECT_TIMEOUT=10
MONGODB_MAX_POOL_SIZE=100

# ======================================================
# ATLAS DATABASE MIGRATION
# ======================================================
ATLAS_ENABLED=true
ATLAS_WORKING_DIR=.
ATLAS_CONFIG_PATH=database/atlas.hcl
ATLAS_ENVIRONMENT=development
ATLAS_SCHEMAS_PATH=database/schemas
ATLAS_MIGRATIONS_PATH=database/migrations/postgresql
DATABASE_URL=postgres://postgres:idriss@localhost:5432/soins_suite?sslmode=disable
ATLAS_DEV_DATABASE_URL=postgres://postgres:idriss@localhost:5432/soins_suite_atlas?sslmode=disable&search_path=public
ATLAS_AUTO_MIGRATE=false
ATLAS_DEFAULT_TIMEOUT=30
ATLAS_MIGRATION_TIMEOUT=60

# ======================================================
# LOGGING
# ======================================================
LOG_LEVEL=debug
# Options: debug, info, warn, error

# ======================================================
# SYSTÈME LICENCES
# ======================================================
SYSTEM_MAX_ACTIVATION_ATTEMPTS=3
SYSTEM_ACTIVATION_TIMEOUT=30
SYSTEM_CACHE_TTL_ACTIVE=1800
SYSTEM_CACHE_TTL_EXPIRED=300
SYSTEM_LICENSE_KEY_LENGTH=20
SYSTEM_ENABLE_MIDDLEWARE=true

# ======================================================
# SÉCURITÉ
# ======================================================
# SUPER ADMIN DE BASE
ADMIN_TIR_DEFAULT_PASSWORD=tir_admin@2025

# ======================================================
# CONFIG SERVEUR LICENCE
# ======================================================
APP_INSTANCE_ID=65c7e20c-c2a2-4026-b2ad-061289062a98
ESTABLISHMENT_TOKEN=est_d90fdb7910233e211af657e3caf74504
LICENSE_SERVER_URL=http://localhost:8000/api/v1

# ======================================================
# CORS (Cross-Origin Resource Sharing)
# ======================================================
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Request-ID,Accept,Origin,X-Requested-With
CORS_ALLOW_CREDENTIALS=true
CORS_MAX_AGE=3600

# ======================================================
# VARIABLES SPÉCIFIQUES PAR ENVIRONNEMENT
# ======================================================

# DEVELOPMENT (APP_ENV=development)
# - Valeurs par défaut ci-dessus
# - Base de données locale, Redis local
# - Logs debug, CORS permissif

# DOCKER (APP_ENV=docker) 
# - Production/Staging unifié
# - Variables surchargées via Docker Compose/Kubernetes
# - Hosts Docker (postgres, redis), SSL requis, logs info
#
# Exemple surcharge Docker Compose :
# DB_HOST=postgres
# REDIS_HOST=redis
# DB_SSL_MODE=require
# LOG_LEVEL=info
# CORS_ALLOWED_ORIGINS=https://app.domain.com
# SERVER_PORT=8080